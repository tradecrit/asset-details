//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "company")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(unique)]
    pub symbol: String,
    pub address: Option<String>,
    pub city: Option<String>,
    pub state: Option<String>,
    pub zip: Option<String>,
    pub icon_url: Option<String>,
    pub logo_url: Option<String>,
    pub cik: Option<String>,
    pub description: Option<String>,
    pub homepage_url: Option<String>,
    pub list_date: Option<Date>,
    pub market_cap: Option<Decimal>,
    pub name: String,
    pub phone_number: Option<String>,
    pub primary_exchange_id: Option<String>,
    pub primary_exchange_name: Option<String>,
    pub sic_code: Option<String>,
    pub sic_description: Option<String>,
    pub total_employees: Option<i64>,
    pub weighted_shares_outstanding: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
